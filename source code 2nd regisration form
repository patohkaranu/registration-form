package com.details.form2;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Form2 {

    public static void main(String[] args) {
        // Create the frame for the form
        JFrame frame = new JFrame("Registration Form");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());
        frame.setSize(600, 400);

        // Create the input panel on the left side of the frame
        JPanel inputPanel = new JPanel();
        inputPanel.setLayout(new GridLayout(6, 2, 10, 10)); // 6 rows, 2 columns
        inputPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Create labels and text fields
        JLabel idLabel = new JLabel("ID:");
        JTextField idField = new JTextField();
        
        JLabel nameLabel = new JLabel("Name:");
        JTextField nameField = new JTextField();

        JLabel genderLabel = new JLabel("Gender:");
        
        // Create radio buttons for gender selection
        JRadioButton maleRadio = new JRadioButton("Male");
        JRadioButton femaleRadio = new JRadioButton("Female");

        // Group the radio buttons so that only one can be selected
        ButtonGroup genderGroup = new ButtonGroup();
        genderGroup.add(maleRadio);
        genderGroup.add(femaleRadio);

        // Set the default gender selection (e.g., Male)
        maleRadio.setSelected(true);

        // Panel for gender radio buttons
        JPanel genderPanel = new JPanel();
        genderPanel.add(maleRadio);
        genderPanel.add(femaleRadio);

        JLabel addressLabel = new JLabel("Address:");
        JTextField addressField = new JTextField();

        JLabel contactLabel = new JLabel("Contact:");
        JTextField contactField = new JTextField();

        // Add labels and fields to the input panel
        inputPanel.add(idLabel);
        inputPanel.add(idField);
        inputPanel.add(nameLabel);
        inputPanel.add(nameField);
        inputPanel.add(genderLabel);
        inputPanel.add(genderPanel);
        inputPanel.add(addressLabel);
        inputPanel.add(addressField);
        inputPanel.add(contactLabel);
        inputPanel.add(contactField);

        // Create buttons for Register and Exit
        JButton registerButton = new JButton("Register");
        JButton exitButton = new JButton("Exit");

        // Panel for buttons
        JPanel buttonPanel = new JPanel();
        buttonPanel.add(registerButton);
        buttonPanel.add(exitButton);

        // Create the output table to display data on the right side
        String[] columnNames = {"ID", "Name", "Gender", "Address", "Contact"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        JTable table = new JTable(model);
        JScrollPane tableScroll = new JScrollPane(table);

        // Add input panel and table to the frame
        frame.add(inputPanel, BorderLayout.WEST);
        frame.add(tableScroll, BorderLayout.CENTER);
        frame.add(buttonPanel, BorderLayout.SOUTH);

        // Action for the Register button
        registerButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Get data from the input fields
                String id = idField.getText();
                String name = nameField.getText();

                // Get the selected gender
                String gender = "";
                if (maleRadio.isSelected()) {
                    gender = "Male";
                } else if (femaleRadio.isSelected()) {
                    gender = "Female";
                }

                String address = addressField.getText();
                String contact = contactField.getText();

                // Add the data to the table
                model.addRow(new Object[]{id, name, gender, address, contact});

                // Clear input fields after registering
                idField.setText("");
                nameField.setText("");
                genderGroup.clearSelection(); // Deselect gender radio buttons
                maleRadio.setSelected(true); // Set Male as default after clearing
                addressField.setText("");
                contactField.setText("");
            }
        });

        // Action for the Exit button
        exitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Close the application
                System.exit(0);
            }
        });

        // Show the frame
        frame.setVisible(true);
    }
}
